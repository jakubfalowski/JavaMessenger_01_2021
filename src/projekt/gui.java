/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projekt;
import java.util.*;
import java.io.*;
import java.time.LocalDateTime;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.format.DateTimeFormatter;
/**
 *
 * @author kubaf
 */
public class gui extends javax.swing.JFrame {

    /**
     * Creates new form gui
     */
    public gui() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        list1 = new java.awt.List();
        jLabel2 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        jPanel1 = new javax.swing.JPanel();
        list5 = new java.awt.List();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        label5 = new java.awt.Label();
        textField1 = new java.awt.TextField();
        button1 = new java.awt.Button();
        label6 = new java.awt.Label();
        label7 = new java.awt.Label();
        list2 = new java.awt.List();
        list3 = new java.awt.List();
        button2 = new java.awt.Button();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        label8 = new java.awt.Label();
        textField2 = new java.awt.TextField();
        button3 = new java.awt.Button();
        label9 = new java.awt.Label();
        list4 = new java.awt.List();
        button4 = new java.awt.Button();
        jLabel5 = new javax.swing.JLabel();
        label10 = new java.awt.Label();
        button5 = new java.awt.Button();
        label11 = new java.awt.Label();
        list6 = new java.awt.List();
        button6 = new java.awt.Button();
        button7 = new java.awt.Button();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 600), new java.awt.Dimension(0, 600), new java.awt.Dimension(32767, 600));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(0, 0, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        setForeground(java.awt.Color.black);

        jButton1.setText("Załaduj / Odśwież");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Rubik", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Czat");
        jLabel1.setToolTipText("");

        list1.setName(""); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Konwersacja z:");

        label1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 255), 2, true));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(list5, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(list5, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton3.setText("Pobierz osoby");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Rubik", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Uproszczony czat");

        label5.setAlignment(java.awt.Label.CENTER);
        label5.setText("Wpisz nową osobę");

        textField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        button1.setActionCommand("Utwwórz nową grupe");
        button1.setLabel("Dodaj nową grupę");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        label6.setAlignment(java.awt.Label.CENTER);
        label6.setText("Osoby");

        label7.setAlignment(java.awt.Label.CENTER);
        label7.setText("Grupy");

        button2.setLabel("Dodaj osobe do grupy");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        jTextField1.setText("Wpisz swoją wiadomość");

        jButton2.setText("Wyślij");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Rubik", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Grupy");

        label8.setAlignment(java.awt.Label.CENTER);
        label8.setText("Wpisz nazwe grupy");

        textField2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        button3.setActionCommand("Utwwórz nową grupe");
        button3.setLabel("Dodaj nową osobe");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        label9.setAlignment(java.awt.Label.CENTER);
        label9.setText("Jakub Fałowski II rok informatyka URz");

        button4.setActionCommand("Utwwórz nową grupe");
        button4.setLabel("Usuń zaznaczoną");
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Rubik", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Osoby");

        label10.setAlignment(java.awt.Label.CENTER);
        label10.setText("Usuń daną osobę");

        button5.setLabel("Pobierz informacje z bazy / odśwież");
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        label11.setAlignment(java.awt.Label.CENTER);
        label11.setText("Usuń daną grupę");

        list6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list6ActionPerformed(evt);
            }
        });

        button6.setActionCommand("Utwwórz nową grupe");
        button6.setLabel("Usuń zaznaczoną");
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        button7.setActionCommand("Usuń osobę z grupy");
        button7.setLabel("Usuń osobę z grupy");
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton1)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(list2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(list3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(360, 360, 360)
                                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(list6, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(list4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(306, 306, 306))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(list4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(list6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(list2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(list3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(list1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(filler1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        list1.getAccessibleContext().setAccessibleName("");
        list1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:5432/projekt", "postgres", "123456")) {

            if (conn != null) {
                System.out.println("Połączyłeś się z bazą danych!");
                String query = "SELECT * FROM uzytkownik";
                String query2 = "SELECT * FROM grupa";
                list1.removeAll();
            try (Statement stmt = conn.createStatement()) {
                    ResultSet rs = stmt.executeQuery(query);
                    ResultSet rs2 = stmt.executeQuery(query2);
                    while(rs2.next()){
                    String grupa = rs2.getString("nazwa_grupy");
                    list1.add(grupa);
                    System.out.println("Grupa to: "+grupa);
                    }
                    while (rs.next()) {
                    String osoba = rs.getString("osoba");
                    list1.add(osoba);
                    System.out.println("Osoba to: "+osoba);}}
            } else {
                System.out.println("Brak połączenia z bazą!");
            }
            
            }
         catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        label1.setText(list1.getSelectedItem());
        list5.removeAll();
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:5432/projekt", "postgres", "123456")) {

            if (conn != null) {
                System.out.println("Połączyłeś się z bazą danych!");
                String wybor = list1.getSelectedItem();
                
                
            try (Statement stmt = conn.createStatement()) {
                    System.out.println(wybor);
                    
                    String query = "SELECT id_grupy FROM grupa WHERE nazwa_grupy='"+wybor+"'";
                    ResultSet rs = stmt.executeQuery(query);
                    while(rs.next()){
                    String id_wybranej_gr = rs.getString(1);
                    System.out.println(id_wybranej_gr);
                    String query2 = "SELECT * FROM wiadomosc WHERE id_grupy = "+id_wybranej_gr;
                    ResultSet rs2 = stmt.executeQuery(query2);
                    while (rs2.next() ) {
                            String wiadomosc = rs2.getString("tresc");
                            list5.add(wiadomosc); 
                    }} 
                       
                    String query3 = "SELECT id_osoby FROM uzytkownik WHERE osoba='"+wybor+"'";
                    ResultSet rs3 = stmt.executeQuery(query3);
                    while(rs3.next()){
                    String id_wybranej_os = rs3.getString(1);
                    System.out.println(id_wybranej_os);
                    String query4 = "SELECT * FROM wiadomosc WHERE id_osoby ="+id_wybranej_os;
                    ResultSet rs4 = stmt.executeQuery(query4);
                    while (rs4.next() ) {
                            String wiadomosc2 = rs4.getString("tresc");
                            list5.add(wiadomosc2); 
                    }} 
                    }
                
            } else {
                System.out.println("Brak połączenia z bazą!");
            }
            
            }
         catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        String nowa_grupa = textField2.getText();
        System.out.println(nowa_grupa);
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:5432/projekt", "postgres", "123456")) {

            if (conn != null) {
                System.out.println("Połączyłeś się z bazą danych!");
                String query = "INSERT INTO grupa(nazwa_grupy) VALUES ('"+nowa_grupa+"');";
            try (Statement stmt = conn.createStatement()) {
                    ResultSet rs = stmt.executeQuery(query);
                    }
            } else {
                System.out.println("Brak połączenia z bazą!");
            }
            
            }
         catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        String wybrana_osoba = list2.getSelectedItem();
        String wybrana_grupa = list3.getSelectedItem();
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:5432/projekt", "postgres", "123456")) {

            if (conn != null) {
                System.out.println("Połączyłeś się z bazą danych!");
                String query = "SELECT id_grupy FROM grupa WHERE nazwa_grupy='"+wybrana_grupa+"'";
            try (Statement stmt = conn.createStatement()) {
                    ResultSet rs = stmt.executeQuery(query);
                    while (rs.next()) {
                        String id_wybranej_gr = rs.getString(1);
                        System.out.println("ID wybranej grupy to: "+id_wybranej_gr);
                        System.out.println(wybrana_osoba);
                        String query2 = "UPDATE uzytkownik SET id_grupy="+id_wybranej_gr+"WHERE osoba='"+wybrana_osoba+"'";
                        stmt.executeQuery(query2);
                    }}
                
            } else {
                System.out.println("Brak połączenia z bazą!");
            }
            
            }
         catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_button2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        

        String nowa_wiadomosc = jTextField1.getText().toLowerCase();
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:5432/projekt", "postgres", "123456")) {

            if (conn != null) {
                String odpowiedz = "";
                if(nowa_wiadomosc.contains("cześć") || nowa_wiadomosc.contains("siem") || nowa_wiadomosc.contains("elo") || nowa_wiadomosc.contains("dzień dobry") || nowa_wiadomosc.contains("witam") | nowa_wiadomosc.contains("hej")) {
                    odpowiedz = "witam";
                }
                else if(nowa_wiadomosc.contains("bot")){
                    odpowiedz = "Ja robotem? Kto Ci tak niby powiedział?";
                }
                else if(nowa_wiadomosc.contains("robisz")){
                    odpowiedz = "nudze się";
                }
                else if(nowa_wiadomosc.contains("imie")){
                    odpowiedz = "Mam na imie Mariusz";
                }
                else if(nowa_wiadomosc.contains("lat")){
                    odpowiedz = "21";
                }
                else if(nowa_wiadomosc.contains("co")){
                    odpowiedz = "aa nieważne";
                }
                else if(nowa_wiadomosc.contains("kto")){
                    odpowiedz = "ty";
                }
                else if(nowa_wiadomosc.contains("ha")){
                    odpowiedz = "heh";
                }
                else if(nowa_wiadomosc.contains("nie")){
                    odpowiedz = "a właśnie że tak";
                }
                else if(nowa_wiadomosc.contains("wpisz swoją wiadomość")){
                    odpowiedz = "wydaje mi się że wpisałeś domyślną wartość";
                }
                else if(nowa_wiadomosc.contains("przecież")){
                    odpowiedz = "skoro tak uważasz to niech będzie";
                }
                else if(nowa_wiadomosc.contains("dzisiaj") || nowa_wiadomosc.contains("który") || nowa_wiadomosc.contains("kiedy")){
                    LocalDateTime now = LocalDateTime.now();
                    odpowiedz = now.format(DateTimeFormatter.ISO_DATE)+"?";
                }
                else if(nowa_wiadomosc.contains("godzina") || nowa_wiadomosc.contains("któr")){
                    LocalDateTime now = LocalDateTime.now();
                    odpowiedz = now.format(DateTimeFormatter.ISO_TIME)+"?";
                }
                else if(nowa_wiadomosc.contains("ile")){
                    odpowiedz = "wszystkie";
                }
                else if(nowa_wiadomosc.contains("czemu")){
                    odpowiedz = "jakoś tak";
                }
                else if(nowa_wiadomosc.contains("jak")){
                    odpowiedz = "dobrze";
                }
                else if(nowa_wiadomosc.contains("kim")){
                    odpowiedz = "sobą";
                }
                else if(nowa_wiadomosc.contains("dlaczego")){
                    odpowiedz = "bo lubie";
                }
                else if(nowa_wiadomosc.contains("ucz")){
                    odpowiedz = "trzeba się uczyć";
                }
                else if(nowa_wiadomosc.contains("jesteś")){
                    odpowiedz = "ty też";
                }
                else if(nowa_wiadomosc.contains("lubi")){
                    odpowiedz = "tylko troszeczke";
                }
                
                else if(nowa_wiadomosc.contains("gdzie")){
                    odpowiedz = "gdzie tylko chce";
                }
                else if(nowa_wiadomosc.contains("czyli")){
                    odpowiedz = "i tak nie zrozumiesz";
                }
                else if(nowa_wiadomosc.contains("pisz") || nowa_wiadomosc.contains("powiedz")){
                    odpowiedz = "jestem wstydliwy";
                }
                else if(nowa_wiadomosc.contains("gra")){
                    odpowiedz = "ja nie gram, uczę się matematyki cały dzień";
                }
                else if(nowa_wiadomosc.contains("myśl") || nowa_wiadomosc.contains("sąd") || nowa_wiadomosc.contains("uważ") ){
                    odpowiedz = "myśle, że to dobry pomysł";
                }
                else if(nowa_wiadomosc.contains("też")){
                    odpowiedz = "to się ciesze że masz podobnie";
                }
                
                
                
                
                else if(nowa_wiadomosc.contains("!")){
                    odpowiedz = "nie krzycz na mnie prosze";
                }
                else if(nowa_wiadomosc.contains("?")){
                    odpowiedz = "nie wiem";
                }
                else{
                    odpowiedz = "ok";
                }
                String wybor = list1.getSelectedItem();
                
                
            try (Statement stmt = conn.createStatement()) {
                    if(wybor == null){
                        System.out.println("Nie wybrałeś osoby do której chcesz wysłać wiadomość");
                    }
                    else{
                    System.out.println("Połączyłeś się z bazą danych!");
                    String query = "SELECT id_grupy FROM grupa WHERE nazwa_grupy='"+wybor+"'";
                    ResultSet rs = stmt.executeQuery(query);
                    String id_wybranej_gr= "";
                    while(rs.next()){
                        id_wybranej_gr = rs.getString(1);
                        System.out.println(id_wybranej_gr);
                        String query_los = "SELECT COUNT(*) FROM uzytkownik WHERE id_grupy ="+id_wybranej_gr;
                        ResultSet los=stmt.executeQuery(query_los);
                        los.next();
                        int liczba_osob = los.getInt(1);
                        System.out.println(liczba_osob);
                        if(liczba_osob > 0){
                            String queryBotgr = "SELECT osoba FROM uzytkownik WHERE id_grupy ="+id_wybranej_gr;
                            ResultSet rsb=stmt.executeQuery(queryBotgr);
                            String[] uzytkownicy_grupy = new String[liczba_osob];
                            Random rndm = new Random();
                            int losowa_liczba = rndm.nextInt(liczba_osob);
                            System.out.println(losowa_liczba+"los licz");
                            for(int i=0; i<liczba_osob; i++) {
                                rsb.next();
                                uzytkownicy_grupy[i] = rsb.getString(1);
                                System.out.println(uzytkownicy_grupy[i]+" os "+i);
                        }
                        String query2 = "INSERT INTO wiadomosc(tresc,id_grupy) VALUES ('"+nowa_wiadomosc+"',"+id_wybranej_gr+"),('"+uzytkownicy_grupy[losowa_liczba]+": "+odpowiedz+"',"+id_wybranej_gr+")";
                        stmt.executeQuery(query2);
                        }
                        else{
                            los.close();
                        }
                    }
                    rs.close();
                    
                    String query3 = "SELECT id_osoby FROM uzytkownik WHERE osoba='"+wybor+"'";
                    ResultSet rs3 = stmt.executeQuery(query3);
                    
                    while(rs3.next()){
                    String id_wybranej_os = rs3.getString(1);
                    String query4 = "INSERT INTO wiadomosc(tresc,id_osoby) VALUES ('"+nowa_wiadomosc+"',"+id_wybranej_os+"),('"+wybor+": "+odpowiedz+"',"+id_wybranej_os+")";
                    ResultSet rs4 = stmt.executeQuery(query4);
                    
                      
                    
                    }}}} 
            
            }
         catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        String nowa_osoba = textField1.getText();
        System.out.println(nowa_osoba);
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:5432/projekt", "postgres", "123456")) {

            if (conn != null) {
                System.out.println("Połączyłeś się z bazą danych!");
                String query = "INSERT INTO uzytkownik(osoba) VALUES ('"+nowa_osoba+"');";
            try (Statement stmt = conn.createStatement()) {
                    ResultSet rs = stmt.executeQuery(query);
                    }
            } else {
                System.out.println("Brak połączenia z bazą!");
            }
            
            }
         catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_button3ActionPerformed

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:5432/projekt", "postgres", "123456")) {

            if (conn != null) {
                try (Statement stmt = conn.createStatement()) {
                    System.out.println("Połączyłeś się z bazą danych!");
                    String wybrana_osoba = list4.getSelectedItem();
                    String query = "SELECT id_osoby FROM uzytkownik WHERE osoba = '"+wybrana_osoba+"'";
                    ResultSet rs = stmt.executeQuery(query);
                    while(rs.next()){
                        String id_wybranej_os = rs.getString(1);
                        String query2 = "DELETE FROM wiadomosc WHERE id_osoby ="+id_wybranej_os+"; DELETE FROM uzytkownik WHERE osoba ='"+wybrana_osoba+"'";
                        stmt.executeQuery(query2);
                    }
                }

                
                
            } else {
            System.out.println("Brak połączenia z bazą!");
            }
            
            }
         catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_button4ActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:5432/projekt", "postgres", "123456")) {
                list2.removeAll();
                list3.removeAll();
                list4.removeAll();
                list6.removeAll();
            if (conn != null) {
                System.out.println("Połączyłeś się z bazą danych!");
                String query = "SELECT * FROM uzytkownik";
                
                String query2 = "SELECT * FROM grupa";
                
            try (Statement stmt = conn.createStatement()) {
                    ResultSet rs2 = stmt.executeQuery(query2);
                    while (rs2.next()) {
                    String grupa = rs2.getString("nazwa_grupy");
                    list3.add(grupa);
                    list6.add(grupa);
                    System.out.println("Grupa to: "+grupa);}
                    ResultSet rs = stmt.executeQuery(query);
                    while (rs.next()) {
                    String osoba = rs.getString("osoba");
                    list2.add(osoba);
                    list4.add(osoba);
                    
                    System.out.println("Osoba to: "+osoba);}}
            } else {
                System.out.println("Brak połączenia z bazą!");
            }
            
            }
         catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_button5ActionPerformed

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:5432/projekt", "postgres", "123456")) {
            
            if (conn != null) {
                String wybrana_grupa = list6.getSelectedItem();
                System.out.println("Połączyłeś się z bazą danych!");
                String query = "SELECT id_grupy FROM grupa WHERE nazwa_grupy='"+wybrana_grupa+"'";
                try (Statement stmt = conn.createStatement()) {
                    ResultSet rs = stmt.executeQuery(query);
                    rs.next();
                    String id_wybranej_gr = rs.getString(1);
                    String query2 = "DELETE FROM wiadomosc WHERE id_grupy ="+id_wybranej_gr+"; UPDATE uzytkownik SET id_grupy=null WHERE id_grupy='"+id_wybranej_gr+"';DELETE FROM grupa WHERE nazwa_grupy = '"+wybrana_grupa+"'";
                    stmt.executeQuery(query2);
                    System.out.println(wybrana_grupa);
                }

                    
                    
            } else {
                System.out.println("Brak połączenia z bazą!");
            }
            
            }
         catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_button6ActionPerformed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        String wybrana_osoba = list2.getSelectedItem();
        String wybrana_grupa = list3.getSelectedItem();
        try (Connection conn = DriverManager.getConnection(
                "jdbc:postgresql://localhost:5432/projekt", "postgres", "123456")) {

            if (conn != null) {
                System.out.println("Połączyłeś się z bazą danych!");
                String query = "SELECT id_grupy FROM grupa WHERE nazwa_grupy='"+wybrana_grupa+"'";
            try (Statement stmt = conn.createStatement()) {
                    ResultSet rs = stmt.executeQuery(query);
                    while (rs.next()) {
                        String id_wybranej_gr = rs.getString(1);
                        System.out.println("ID wybranej grupy to: "+id_wybranej_gr);
                        System.out.println(wybrana_osoba);
                        String query2 = "UPDATE uzytkownik SET id_grupy=null WHERE osoba='"+wybrana_osoba+"'";
                        stmt.executeQuery(query2);
                    }}
                
            } else {
                System.out.println("Brak połączenia z bazą!");
            }
            
            }
         catch (SQLException e) {
            System.err.format("SQL State: %s\n%s", e.getSQLState(), e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_button7ActionPerformed

    private void list6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_list6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    private java.awt.Button button3;
    private java.awt.Button button4;
    private java.awt.Button button5;
    private java.awt.Button button6;
    private java.awt.Button button7;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private java.awt.Label label1;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    public java.awt.List list1;
    private java.awt.List list2;
    private java.awt.List list3;
    private java.awt.List list4;
    private java.awt.List list5;
    private java.awt.List list6;
    private java.awt.TextField textField1;
    private java.awt.TextField textField2;
    // End of variables declaration//GEN-END:variables
}
